<!--
Copyright 2023 Crystal Ferrai

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<Window
	x:Class="PhasmoTracker.StreamOverlayWindow"
	x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:PhasmoTracker"
	xmlns:c="clr-namespace:PhasmoTracker.Controls"
	xmlns:conv="clr-namespace:PhasmoTracker.Converters"
    mc:Ignorable="d"
    Title="PhasmoTracker Overlay"
    Width="462"
    Height="446"
	MouseDown="Window_MouseDown"
	Style="{StaticResource OverlayWindow}"
    d:DataContext="{d:DesignInstance Type={x:Type local:MainWindowVM}, IsDesignTimeCreatable=False}">
	<Window.Resources>
		<Style
			TargetType="{x:Type c:SelectableControl}">
			<Setter Property="IsReadOnly" Value="True" />
		</Style>

		<Style
			x:Key="Divider"
			TargetType="{x:Type Border}">
			<Setter Property="Height" Value="1" />
			<Setter Property="Margin" Value="-20 0 -20 2" />
			<Setter Property="VerticalAlignment" Value="Bottom" />
			<Setter Property="Background" Value="#ff808890" />
		</Style>
	</Window.Resources>
	<Border>
		<Border.Style>
			<Style
				TargetType="{x:Type Border}">
				<Setter Property="Background" Value="#c0000000" />
				<Setter Property="BorderBrush" Value="#ff808890" />
				<Setter Property="BorderThickness" Value="1" />
			</Style>
		</Border.Style>

		<Grid
			Margin="4">
			<Grid.RowDefinitions>
				<RowDefinition Height="auto" />
				<RowDefinition Height="10" />
				<RowDefinition Height="auto" />
				<RowDefinition Height="10" />
				<RowDefinition Height="auto" />
			</Grid.RowDefinitions>
			
			<ContentPresenter
				Content="{Binding Evidences}" />

			<Border
				Grid.Row="1"
				Style="{StaticResource Divider}" />

			<ContentPresenter
				Grid.Row="2"
				Content="{Binding Ghosts}" />
			
			<Border
				Grid.Row="3"
				Style="{StaticResource Divider}" />

			<Grid
				Grid.Row="4"
				Margin="0 -4 0 0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition>
						<ColumnDefinition.Style>
							<Style
								TargetType="{x:Type ColumnDefinition}">
								<Setter Property="Width" Value="*" />
								<Style.Triggers>
									<DataTrigger Binding="{Binding IsSanityVisible}" Value="False">
										<Setter Property="Width" Value="0" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</ColumnDefinition.Style>
					</ColumnDefinition>
				</Grid.ColumnDefinitions>

				<c:SelectableControl
					SelectionMode="NoUnselect"
					SelectableType="WithoutCircle"
					DefaultBrush="#ff888888"
					IsSelected="{Binding IsTimerRunning}">
					<TextBlock>
						<TextBlock.Text>
							<MultiBinding StringFormat="{}{0}:{1:00}">
								<Binding Path="TimerElapsedTime.Minutes" />
								<Binding Path="TimerElapsedTime.Seconds" />
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
				</c:SelectableControl>

				<Grid
					Grid.Column="1"
					Margin="0 -1 0 -1"
					Visibility="{Binding IsSanityVisible, Converter={x:Static conv:BoolToVisibilityConverter.CollapseInstance}}">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="auto" />
						<ColumnDefinition Width="100" />
					</Grid.ColumnDefinitions>

					<TextBlock
						VerticalAlignment="Center"
						Margin="0 1 0 0"
						Text="Sanity" />

					<c:SelectableControl
						Grid.Column="1"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Padding="0"
						Margin="0 -2 0 0"
						SelectionMode="NoUnselect"
						SelectableType="WithoutCircle"
						DefaultBrush="#ff888888"
						RejectedBrush="{Binding DefaultBrush, RelativeSource={RelativeSource Self}}"
						IsSelected="{Binding IsSanityDraining}">
						<TextBlock
							Text="{Binding CurrentSanity, StringFormat={}{0:P2}}" />
					</c:SelectableControl>
				</Grid>
				
			</Grid>
		</Grid>
	</Border>
</Window>
