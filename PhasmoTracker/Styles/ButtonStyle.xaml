<!--
Copyright 2023 Crystal Ferrai

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<Style
		TargetType="{x:Type Button}">
		<Setter Property="Padding" Value="2 2" />
		<Setter Property="BorderBrush" Value="#ff606060" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="#303030" />
		<Setter Property="Foreground" Value="#ffffffff" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Button}">
					<Border
						BorderBrush="{TemplateBinding BorderBrush}"
						Background="{TemplateBinding Background}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Padding="{TemplateBinding Padding}">
						<ContentPresenter
							Content="{TemplateBinding Content}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="#ffc0c0c0" />
							<Setter Property="Background" Value="#ff404040" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="BorderBrush" Value="#ffa0a0a0" />
							<Setter Property="Foreground" Value="#fff0f0f0" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="BorderBrush" Value="#ff404040" />
							<Setter Property="Foreground" Value="#ff808080" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		TargetType="{x:Type ToggleButton}">
		<Setter Property="Padding" Value="2 2" />
		<Setter Property="BorderBrush" Value="#ff606060" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="#303030" />
		<Setter Property="Foreground" Value="#ffffffff" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type ToggleButton}">
					<Border
						BorderBrush="{TemplateBinding BorderBrush}"
						Background="{TemplateBinding Background}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Padding="{TemplateBinding Padding}">
						<ContentPresenter
							Content="{TemplateBinding Content}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="BorderBrush" Value="#ffa0b0e0" />
							<Setter Property="Foreground" Value="#fff0f0f0" />
							<Setter Property="Background" Value="#ff505050" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="#ffc0c0c0" />
							<Setter Property="Background" Value="#ff404040" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" Value="#ffb0c0f0" />
							<Setter Property="Background" Value="#ff606060" />
						</MultiTrigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="BorderBrush" Value="#ffa0a0a0" />
							<Setter Property="Foreground" Value="#fff0f0f0" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="BorderBrush" Value="#ff404040" />
							<Setter Property="Foreground" Value="#ff808080" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="ContentOnlyButton"
		TargetType="{x:Type Button}">
		<Setter Property="Padding" Value="0" />
		<Setter Property="Foreground" Value="#ffaaaaaa" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type Button}">
					<Border
						Background="Transparent">
						<ContentPresenter
							Content="{TemplateBinding Content}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsEnabled" Value="True" />
					<Condition Property="IsMouseOver" Value="True" />
				</MultiTrigger.Conditions>
				<Setter Property="Foreground" Value="#ffffffff" />
				<Setter Property="Cursor" Value="Hand" />
			</MultiTrigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="#ff404040" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>